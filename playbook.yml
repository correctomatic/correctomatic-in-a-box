---
- hosts: all
  become: true
  become_method: sudo

  pre_tasks:

    - name: Stop unattended-upgrades service
      systemd:
        name: unattended-upgrades
        state: stopped
        enabled: no

    - name: Set the system timezone
      timezone:
        name: "{{ server_timezone }}"
    - name: Print the environment configuration
      debug:
        msg: "Launching in mode: {{ 'development' if development_mode else 'production'}}"
    # We will add the user running the playbook to the docker group
    - name: Get the username running the deploy
      become: false
      command: whoami
      register: username_on_the_host_output
    - set_fact:
        ansible_user: "{{ username_on_the_host_output.stdout }}"

  # Additional tasks when running in development mode
  tasks:
    - name: Development mode extra configuration
      block:
        - name: Install utility packages
          apt:
            pkg:
              - net-tools
              - vim
            state: present
            update_cache: yes
        - name: Add ansible user to docker group
          user:
            name: "{{ ansible_user }}"
            groups: docker
            append: yes
      when: development_mode

  post_tasks:
    - name: Start unattended-upgrades service
      systemd:
        name: unattended-upgrades
        state: started
        enabled: yes

  roles:
    - { role: docker, tags: docker }
    - { role: docker-registry, tags: registry }
    - { role: nginx, tags: nginx }
    # Temporary for debugging in production
    #- { role: redis, tags: redis, redis_bind_address: "{{ correctomatic.network.gateway }}" }
    - { role: redis, tags: redis, redis_bind_address: "0.0.0.0" }
    - { role: firewall, tags: firewall }
    - { role: postgresql, tags: postgresql }
    - { role: runner, tags: runner }
    - { role: api, tags: api }
    - { role: app, tags: app }
    - { role: pino-pretty, tags: pino-pretty }

