# Assumes that docker is already installed
---
- name: Set the list of domains
  set_fact:
    nginx_domains:
      - name: "registry"
        domain: "{{ registry.domain }}"
      - name: "app"
        domain: "{{ correctomatic.app.domain }}"

- include_tasks: setup_nginx.yml

# Docker registry users are managed by nginx
- include_tasks: manage_registry_users.yml

# Certificates are configured in a different way if we
# are running the playbook in dev mode: it will use certbot for production
# and a self-signed certificate for development
- block:
  - name: Install Certbot
    apt:
      name: certbot
      state: present
      update_cache: yes

  # Needed for renewals
  - name: Install Certbot Nginx plugin
    apt:
      name: python3-certbot-nginx
      state: present

  # We need to stop the nginx server because certbot will try to bind to port 80
  - name: Setup cron job for certbot renewals
    cron:
      name: "Renew Let's Encrypt certificates"
      job: "/bin/systemctl stop nginx && /usr/bin/certbot renew; /bin/systemctl start nginx"
      hour: 3
      minute: 0

  when: not development_mode

- include_tasks: setup_certificate.yml
  when: not development_mode
  loop: "{{ nginx_domains }}"
  loop_control:
    label: "{{ item.name }} ({{ item.domain }})"
  vars:
    name: "{{ item.name }}"
    domain: "{{ item.domain }}"

# In development mode, we use self-signed certificates
- include_tasks: self_signed_certificate.yml
  when: development_mode
  loop: "{{ nginx_domains }}"
  loop_control:
    label: "{{ item.name }} ({{ item.domain }})"
  vars:
    name: "{{ item.name }}"
    domain: "{{ item.domain }}"
